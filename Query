Create database & tables.


create database pizzahut;
use pizzahut;
create table orders(
order_id int not null,
order_date date not null,
order_time time not null,
primary key (order_id));

create table order_details(
order_details_id int not null,
order_id int not null,
pizza_id text not null,
quantity int not null,
primary key(order_details_id));




Data Analysis

1.
-- Retrieve the total number of orders placed

select count(order_id) as total_orders from orders;



2.
-- Calculate the total revenue generated from pizza sales.alter

select round(sum(order_details.quantity * pizzas.price),2) as total_sales
from order_details join pizzas
on pizzas.pizza_id = order_details.pizza_id;



3.
-- Identify the highest priced pizza.
select pizza_types.name, pizzas.price
from pizza_types join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
order by pizzas.price desc limit 1;





4.
-- Identify the most common pizza size ordered
select pizzas.size, count(order_details.order_id) as order_count
from pizzas
join order_details on pizzas.pizza_id = order_details.pizza_id
group by pizzas.size
order by order_count desc;



5.
-- List the top 5 most ordered pizza types along with their quantities

SELECT
  pt.name,
  SUM(od.quantity) AS total_quantity
FROM
  pizza_types pt
  JOIN pizzas p ON pt.pizza_type_id = p.pizza_type_id
  JOIN order_details od ON p.pizza_id = od.pizza_id
GROUP BY
  pt.name
ORDER BY
  total_quantity DESC
LIMIT
  5;



6.
-- Find the total quantity of each pizza category ordered

SELECT
  pt.category,
  SUM(od.quantity) AS total_quantity
FROM
  pizza_types pt
  JOIN pizzas p ON pt.pizza_type_id = p.pizza_type_id
  JOIN order_details od ON p.pizza_id = od.pizza_id
GROUP BY
  pt.category;




7.
-- Determine the distribution of orders by hour of the day

SELECT
  hour(order_time) AS hour_of_day,
  COUNT(order_id) AS order_count
FROM
  Orders
GROUP BY
  hour(order_time);

8.
-- Find category-wise distribution of pizzas

SELECT
  category,
  COUNT(name) AS count
FROM
  pizza_types
GROUP BY
  category;



9.
-- Group the orders by date and calculate the average number of pizzas ordered per day.

SELECT
  round(AVG(quantity),0) AS average_pizzas_ordered
FROM
  (SELECT orders.order_date, SUM(order_details.quantity) As quantity
  FROM orders
  JOIN order_details ON orders.order_id = order_details.order_id
GROUP BY
  orders.order_date) as order_quantity;




